{"version":3,"sources":["Components/Button/index.tsx","Components/Input/index.tsx","Components/ToDoItem/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","Styled","div","props","backgroundColor","hoverColor","Label","Button","label","onClick","InputBox","input","Input","placeholder","onChange","value","event","target","ToDoItem","onDelete","Contents","InputContainer","ToDoListContainer","App","useState","toDo","setToDo","toDoList","setToDoList","map","item","index","list","splice","deleteToDo","text","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAgBMA,EAAWC,IAAOC,IAAT,qPAEK,SAACC,GAAD,OAAWA,EAAMC,mBAKf,SAACD,GAAD,OAAWA,EAAME,cASjCC,EAAQL,IAAOC,IAAV,iEAKEK,EAAS,SAAC,GAGD,IAHEC,EAGH,EAHGA,MAGH,IAFrBJ,uBAEqB,MAFJ,UAEI,MADrBC,kBACqB,MADR,WACQ,EAArBI,EAAqB,EAArBA,QACE,OACE,cAACT,EAAD,CAAWI,gBAAiBA,EAC5BC,WAAYA,EAEZI,QAASA,EAHT,SAMJ,cAACH,EAAD,UAAQE,OC5CFE,EAAYT,IAAOU,MAAX,+IAeDC,EAAQ,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,YAAYC,EAA2B,EAA3BA,SAASC,EAAkB,EAAlBA,MAC1C,OACE,cAACL,EAAD,CAAUG,YAAaA,EACvBE,MAAOA,EACPD,SAAY,SAACE,GAAiC,oBAAZF,GAC/BA,EAASE,EAAMC,OAAOF,WCnBvBf,EAAYC,IAAOC,IAAV,sIAQTI,EAAQL,IAAOC,IAAV,4EAWEgB,EAAW,SAAC,GAA8B,IAA7BV,EAA4B,EAA5BA,MAAOW,EAAqB,EAArBA,SAC7B,OACI,eAAC,EAAD,WACI,cAAC,EAAD,UAAQX,IACR,cAAC,EAAD,CAAQA,MAAM,eAAKJ,gBAAgB,UACnCC,WAAW,UACXI,QAASU,QCzBfnB,EAAYC,IAAOC,IAAV,0IAQTkB,EAAWnB,IAAOC,IAAV,kLAeRmB,GANQpB,IAAOC,IAAV,qEAMYD,IAAOC,IAAV,6CAIdoB,EAAoBrB,IAAOC,IAAV,0IAiDRqB,MAzCf,WACE,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAA+BF,mBAAmB,IAAlD,mBAAOG,EAAP,KAAgBC,EAAhB,KAeA,OACE,cAAC,EAAD,UACC,eAACR,EAAD,WACE,cAACE,EAAD,UACGK,EAASE,KAAI,SAACC,EAAKC,GAAN,OACd,cAAC,EAAD,CAAqBvB,MAAOsB,EAAMX,SAAU,kBAXhC,SAACY,GAClB,IAAIC,EAAI,YAAOL,GACfK,EAAKC,OAAOF,EAAM,GAClBH,EAAYI,GASRE,CAAWH,KADKD,QAGhB,eAACT,EAAD,WAEA,cAAC,EAAD,CAAOR,YAAY,0DAAaE,MAAQU,EACvCX,SAAU,SAACqB,GAAD,OAAUT,EAAQS,MAE7B,cAAC,EAAD,CAAQ3B,MAAM,eAAKC,QA1BT,WACXgB,IACDG,EAAY,GAAD,mBAAKD,GAAL,CAAcF,KACzBC,EAAQ,iBCjCCU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.04b336a3.chunk.js","sourcesContent":["import React from 'react';\nimport Styled from 'styled-components';\n\ninterface Props {\n  readonly label : string;\n  readonly backgroundColor? : string;\n  readonly hoverColor? : string;\n  readonly onClick? : () => void;\n}\n\ninterface ContainerProps {\n \n  readonly backgroundColor : string;\n  readonly hoverColor : string;\n}\n\nconst Container= Styled.div<ContainerProps>`\ntext-align:center;\nbackground-color: ${(props) => props.backgroundColor};\npadding : 10px 20px;\nborder-radius : 8px;\ncursor : pointer;\n&:hover {\n  background-color: ${(props) => props.hoverColor}; \n} \n\n&:active {\n  box-shadow: inset 5px 5px 10px rgba(0,0,0,0.2);\n}\n`;\n \n// ${} <- 직접대입코드\nconst Label = Styled.div`\ncolor: #FFFFFFF;\nfont-size : 16px;\n`;\n\nexport const Button = ({label, \nbackgroundColor= \"#304FFE\", \nhoverColor = ' #1E40FF',\nonClick} : Props) => {\n  return (\n    <Container backgroundColor={backgroundColor}\n    hoverColor={hoverColor}\n    \n    onClick={onClick}\n    >\n\n<Label>{label}</Label>\n\n    </Container>\n  );\n}\n\n","import { OpenDirOptions } from 'fs';\nimport React from 'react';\nimport Styled from 'styled-components';\n\nconst InputBox  = Styled.input`\nflex:1;\nfont-size: 16px;\npadding : 10px 10px;\nborder-radius : 8px;\nborder : 1px solid #BDBDBD;\noutline:none;\n`;\n\ninterface Props {\n  readonly placeholder? : string;\n  readonly onChange?: (text:string) => void;\n  readonly value?: string;\n\n}\nexport const Input = ({placeholder,onChange,value}: Props) => {\n  return ( \n    <InputBox placeholder={placeholder}\n    value={value}\n    onChange = {(event) => {if(typeof onChange ==='function')\n      {onChange(event.target.value);}}} />\n  );\n}","import React from 'react';\r\nimport Styled from 'styled-components';\r\n\r\nimport {Button} from 'Components/Button';\r\n\r\nconst Container = Styled.div`\r\ndisplay:flex;\r\nborder-bottom: 1px solid #BDBDBD;\r\nalign-items : center;\r\nmargin : 10px;\r\npadding : 10px;\r\n`;\r\n\r\nconst Label = Styled.div`\r\nflwx:1;\r\nfont-size:16px;\r\nmargin-right : 20px;\r\n`;\r\n\r\ninterface Props {\r\n    readonly label : string;\r\n    readonly onDelete?:() => void;\r\n}\r\n\r\nexport const ToDoItem = ({label, onDelete}: Props) => {\r\n    return (\r\n        <Container>\r\n            <Label>{label}</Label>\r\n            <Button label=\"삭제\" backgroundColor=\"#FF1744\"\r\n            hoverColor=\"#F01440\"\r\n            onClick={onDelete} />\r\n        </Container>\r\n    );\r\n}","import React, {useState} from 'react';\nimport Styled from 'styled-components';\nimport {Button , Input, ToDoItem } from 'Components';\n\n\nconst Container = Styled.div`\nmin-height : 100vh;\ndisplay:flex;\nalign-items : center;\njustify-content:center;\nflex-direction : column;\n`;\n\nconst Contents = Styled.div `\ndisplay : flex;\nbakcground-color : #FFFFFF;\nflex-direction : column;\npadding:20px;\nborder-radius:8px;\nbox-shadow: 5px 5px 10px rgba(0,0,0,0.2);\n`;\n\nconst Label = Styled.div`\nflex:1;\nfont-size:15px;\npadding:10px;\n`;\n\nconst InputContainer = Styled.div`\ndisplay: flex;\n`;\n\nconst ToDoListContainer = Styled.div`\nmid-width : 350px;\nheight : 400px;\noverflow-y : scroll;\nborder : 1px solid #BDBDBD;\nmargin-bottom :20px;\n`;\n\nfunction App() {\n  const [toDo,setToDo] = useState('');\n  const [toDoList,setToDoList] = useState<string[]>([]);\n\n  const addToDo = () : void => {\n    if(toDo) {\n      setToDoList([...toDoList,toDo]); \n      setToDo('');\n    }\n  }\n\n  const deleteToDo = (index : number) : void => {\n    let list = [...toDoList];\n    list.splice(index,1);\n    setToDoList(list);\n  }\n\n  return (\n    <Container>\n     <Contents>\n       <ToDoListContainer>\n         {toDoList.map((item,index) =>\n         <ToDoItem key={item} label={item} onDelete={() => \n        deleteToDo(index)} />)}\n        </ToDoListContainer>\n        <InputContainer>\n\n        <Input placeholder=\"할일을 입력해주세요\" value ={toDo}\n         onChange={(text) => setToDo(text)} />\n  \n        <Button label=\"추가\" onClick={addToDo} />\n       \n       \n\n     \n       </InputContainer>\n     </Contents>     \n      </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}